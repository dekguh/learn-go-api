version: '3.8'

services:
  app:
    build:
      context: ../../
      dockerfile: ./deployments/docker/Dockerfile
    container_name: learn-go-api-dev
    ports:
      - "8080:8080"
    env_file:
      - ../../.env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../../:/app
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: learn-go-api-postgres-dev
    environment:
      - POSTGRES_DB=learn_go_api_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
